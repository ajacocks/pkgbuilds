name: GPG Sign Files
description: GPG Sign Files
inputs:
  secret:
    description: secret key to dencrypt gpg key
    required: true
  dir:
    description: Directory
    required: false
    default: '.'
  gpgkey:
    description: gpg key
    required: false
    default: 'key.gpg.enc'
  file:
    description: files to sign
    required: true
runs:
  using: composite
  steps:
    - id: set-sign
      run: |
        if [ -z "${{inputs.secret}}" ]; then
          echo "::set-output name=sign::false"
        else
          if [ -f "${{inputs.gpgkey}}" ]; then
            echo "::set-output name=sign::true"
          else
            echo "::set-output name=sign::false"
          fi
        fi
      shell: bash
    - if: ${{ steps.set-sign.outputs.sign == 'true' }}
      run: openssl aes-256-cbc -d -a -pbkdf2 -in ${{inputs.gpgkey}} -pass pass:${{inputs.secret}} | gpg --import
      shell: bash
    - if: ${{ steps.set-sign.outputs.sign == 'true' }}
      run: find ${{inputs.dir}} -iname "${{inputs.file}}" -exec gpg --no-tty --detach-sign --use-agent --no-armor {} \;
      shell: bash
    - run: ls -lAh
      shell: bash
    - run: ls -lAh ${{inputs.dir}}
      shell: bash