name: Package Request
on:
  issues:
    types:
      - opened
      - edited
      - reopened
    label: package

concurrency:
  group: "release"

jobs:
  variables:
    runs-on: ubuntu-latest
    outputs:
      enc-gpg: ${{ steps.config.outputs.enc-gpg }}
      repo-name: ${{ steps.config.outputs.repo-name}}
      packager: ${{ steps.config.outputs.packager }}

      package: ${{ steps.issue-parser.outputs.issueparser_package }}
      source: ${{ steps.issue-parser.outputs.issueparser_source }}
    steps:
      - uses: actions/checkout@v3
      - id: config
        uses: ./.github/actions/load-config
      - uses: stefanbuck/github-issue-praser@v3
        id: issue-parser
        with:
          template-path: .github/ISSUE_TEMPLATE/request-package.yml

  build-check:
    needs: 
      - variables
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: git submodule add https://aur.archlinux.org/${PACKAGE}.git
        if: needs.variables.outputs.source == 'Archlinux AUR'
        env:
          PACKAGE: ${{ needs.variables.outputs.package }}
      - run: git submodule add https://github.com/${PACKAGE}.git
        if: needs.variables.outputs.source == 'Github Repo'
        env:
          PACKAGE: ${{ needs.variables.outputs.package }}
      - run: |
          echo "package=`basename \"${PACKAGE}\"`" | tee -a "${GITHUB_OUTPUT}"
        id: basename
        env:
          PACKAGE: ${{ needs.variables.outputs.package }}
      - run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git commit -am "feat: ${PACKAGE}"
        if: github.repository_owner == github.actor
        env:
          PACKAGE: ${{ steps.basename.outputs.package }}
      - name: Build ${{ steps.basename.outputs.package }}
        uses: ./.github/actions/archlinux
        env:
          PACKAGER: ${{ needs.variables.outputs.packager }}
          SECRET: ${{ secrets.ENCRYPTION_KEY }}
          GPGKEY: ${{ needs.variables.outputs.enc-gpg }}
        with:
          dir: ${{ steps.basename.outputs.package }}
          run: makepkg -sr --sign -C -c --noconfirm --noprogressbar
      # Add to repo
      - if: github.repository_owner == github.actor
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: repository
          file: ${{ needs.variables.outputs.package }}/*.pkg.*
          file_glob: true
          overwrite: false
      - if: github.repository_owner == github.actor
        run: |
          git clean -fd
          git push -u origin master
      - if: github.repository_owner == github.actor
        uses: peter-evans/close-issue@v2

  invalid:
    if: failure()
    runs-on: "ubuntu-latest"
    needs:
      - variables
      - build-check
    steps:
      - uses: peter-evans/close-issue@v2
        with:
         comment: Build-Check has failed. Either not a archlinux package (missing PKGBUILD) or missing dependency. Closing Issue 

#  get-info:
#    if: github.repository_owner != github.actor
#    runs-on: "ubuntu-latest"
#    needs:
#      - variables
#      - build-check
#    steps:


  build-repo:
    if: github.repository_owner == github.actor
    runs-on: "ubuntu-latest"
    needs: 
      - variables
      - build-check

    steps:
    - uses: actions/checkout@v3
    - name: Get current packages
      uses: robinraju/release-downloader@v1.7
      with:
        latest: true
        fileName: '*.pkg.*'
        tarBall: false
        zipBall: false
        token: ${{ secrets.GITHUB_TOKEN }}
    - name: Build Repo
      uses: ./.github/actions/archlinux
      env:
        PACKAGER: ${{ needs.variables.outputs.packager }}
        SECRET: ${{ secrets.ENCRYPTION_KEY }}
        GPGKEY: ${{ needs.variables.outputs.enc-gpg }}
      with:
        run: repo-add -s -q --nocolor -n -R ${{ needs.variables.outputs.repo-name }}.db.tar.gz *.pkg.tar.zst
    - name: Upload new repo
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        tag: repository
        file: ${{ needs.variables.outputs.repo-name }}.db*
        file_glob: true
        overwrite: true

