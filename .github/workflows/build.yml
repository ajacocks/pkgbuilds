on:
  push:
    branches:
      - master

jobs:
  variables:
    runs-on: ubuntu-latest
    outputs:
      encGPG: ${{ steps.config.outputs.encGPG }}
      pubGPG: ${{ steps.config.outputs.pubGPG }}
      name: ${{ steps.config.outputs.name }}
      email: ${{ steps.config.outputs.email }}
      repoName: ${{ steps.config.outputs.repoName}}

      packager: ${{ steps.packager.outputs.packager }}

      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - id: set-matrix
      run: echo "::set-output name=matrix::`find . -iname 'PKGBUILD' -exec bash -c \"basename \\$(dirname \\"{}\\")\" \\; | jq -R -s -c 'split(\"\n\")[:-1]'`"
    - id: config
      run: |
        getVal(){
          if [ ! -f config.json ]; then
            echo "::set-output name=${1}::${2}"
            return
          fi
          val=`cat config.json | jq -r .${1}`
          if [ "${val}" == "null" ]; then
            echo "::set-output name=${1}::${2}"
            return
          fi
          echo "::set-output name=${1}::${val}"
        }
        getVal encGPG key.gpg.enc
        getVal pubGPG public.gpg
        getVal name "GitHub Action"
        getVal email github-action@users.noreply.github.com
        getVal repoName aur
    - id: packager
      run: echo "::set-output name=packager::${{ steps.config.outputs.name }} <${{ steps.config.outputs.email }}>"

  build-packages:
    runs-on: ubuntu-latest
    needs: variables

    strategy:
      matrix:
        package: ${{fromJson(needs.variables.outputs.matrix)}}
    
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Build ${{ matrix.package }}
      uses: ./.github/actions/makepkg
      continue-on-error: true
      with:
        package: ${{ matrix.package }}
        token: ${{ secrets.GITHUB_TOKEN }}
        packager: ${{ needs.variables.outputs.packager }}
        secret: ${{ secrets.ENCRYPTION_KEY }}
  
  build-repo:
    runs-on: "ubuntu-latest"
    needs: 
      - variables
      - build-packages

    steps:
    - uses: actions/checkout@v3
    - name: "Update Repo"
      uses: ./.github/actions/repo-add
      with:
        packager: ${{ needs.variables.outputs.packager }}
        name: ${{ needs.variables.outputs.repoName }}
        secret: ${{ secrets.ENCRYPTION_KEY }}
        gpgkey: ${{ needs.variables.outputs.encGPG }}
        token: ${{ secrets.GITHUB_TOKEN }}
    - uses: actions/download-artifact@v3
      with:
        name: packages
        path: repo/
    - uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        tag: repository
        file: 'repo/*'
        file_glob: true
        overwrite: true